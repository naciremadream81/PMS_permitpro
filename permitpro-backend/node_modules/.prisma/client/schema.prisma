generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
  role  String
}

model Contractor {
  id             Int             @id @default(autoincrement())
  companyName    String
  licenseNumber  String          @unique
  address        String
  phoneNumber    String
  email          String?
  contactPerson  String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  packages       Package[]
  subcontractors Subcontractor[]
}

model Subcontractor {
  id            Int                    @id @default(autoincrement())
  companyName   String
  licenseNumber String?
  address       String?
  phoneNumber   String?
  email         String?
  contactPerson String?
  tradeType     String // e.g., "Electrical", "Plumbing", "HVAC", "Roofing"
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
  contractor    Contractor             @relation(fields: [contractorId], references: [id], onDelete: Cascade)
  contractorId  Int
  packages      PackageSubcontractor[]
}

model Package {
  id              Int                    @id @default(autoincrement())
  customerName    String
  propertyAddress String
  county          String
  permitType      String                 @default("Mobile Home Permit")
  status          String                 @default("Draft")
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
  documents       Document[]
  contractor      Contractor             @relation(fields: [contractorId], references: [id])
  contractorId    Int
  subcontractors  PackageSubcontractor[]
}

model PackageSubcontractor {
  id              Int           @id @default(autoincrement())
  package         Package       @relation(fields: [packageId], references: [id], onDelete: Cascade)
  packageId       Int
  subcontractor   Subcontractor @relation(fields: [subcontractorId], references: [id], onDelete: Cascade)
  subcontractorId Int
  tradeType       String // Specific trade for this package
  createdAt       DateTime      @default(now())

  @@unique([packageId, subcontractorId])
}

model Document {
  id           Int      @id @default(autoincrement())
  fileName     String
  filePath     String
  uploadedAt   DateTime @default(now())
  uploaderName String
  version      String   @default("1.0")
  packageId    Int
  package      Package  @relation(fields: [packageId], references: [id], onDelete: Cascade)
}
